/*
COLORS:
Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485
*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: '#777';
  padding: 30px;
}

.header {
  height: 95vh;
  background-image: linear-gradient(to right bottom,rgba(126,213,111,0.8),rgba(40,100,131,0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;

  /* The clip-path property lets you clip an element to a basic shape or to an SVG source. */
  clip-path: polygon(0 0,100% 0,100% 75vh,0 100%);
  position: relative;
}


.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.text-box {
  
  position: absolute;
  top: 40%;
  left: 50%;
  /* 在上面的基础之上 自身左移和上移50%以达到居中效果 */
  transform: translate(-50%, -50%);
  text-align: center;
}

.logo {
  height: 35px;
}

.heading-primary{
  color: #fff;
  text-transform: uppercase;
  margin-bottom: 60px;
}

.heading-primary-main{
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  /* the animation */
  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
}

.heading-primary-sub{
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.4px;

  /* the animation */
  animation: moveInRight 1s ease-out; 
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }


}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

/* 
:link和:visited是CSS中的伪类选择器，用于设置链接的样式。
:link用于设置未访问过的链接的样式，即链接的默认状态。
:visited用于设置已访问过的链接的样式，即链接的访问状态。 */
.btn:link,
.btn:visited{
  text-transform: uppercase;
  text-decoration: none;
  padding: 15px 40px;
  border-radius: 100px;
  display: inline-block;
  position: relative;
}

.btn-white{
  background-color: #fff;
  color: #777;
  transition: all 0.2s;
}

.btn:hover{
  transform: translateY(-3px);
  /* 水平偏移量（必需）：阴影相对于元素的水平偏移量，可以是正数或负数。
垂直偏移量（必需）：阴影相对于元素的垂直偏移量，可以是正数或负数。
模糊半径（可选）：阴影的模糊程度，值越大阴影越模糊，可以是0。
扩展半径（可选）：阴影的扩展程度，值越大阴影越大，可以是0。
阴影颜色（可选）：阴影的颜色，可以是CSS颜色值或RGBA值。  */
  box-shadow: 0 10px 20px rgba(0,0,0,0.2);
}

/* 
:active是CSS中的伪类选择器，用于设置元素在被激活（例如被点击）时的样式。
当用户点击一个元素时，该元素会进入:active状态，
此时可以通过:active选择器来设置该元素的样式。 */
.btn:active{
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0,0,0,0.2);
}

.btn:after{
  content: "";
  display: inline-block;
  width: 100%;
  height: 100%;
  border-radius: 100px;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  transition: all 0.4s;
}

.btn-white:after{
  background-color: #fff;
}

.btn:hover::after{
  transform: scaleX(1.4) scaleY(1.6);
  opacity: 0;
}

.btn-animated {
  /* 在CSS中，animation属性用于创建动画效果。它可以接受多个参数，包括：

animation-name：必需，指定动画的名称，可以是@keyframes规则中定义的动画名称。
animation-duration：必需，指定动画的持续时间，可以是秒（s）或毫秒（ms）。
animation-timing-function：可选，指定动画的时间函数，用于控制动画的进度。
animation-delay：可选，指定动画的延迟时间，可以是秒（s）或毫秒（ms）。
animation-iteration-count：可选，指定动画的循环次数，可以是具体的次数或infinite（无限循环）。
animation-direction：可选，指定动画的播放方向，可以是normal（正常播放）、reverse（反向播放）或alternate（交替播放）。
animation-fill-mode：可选，指定动画播放前和播放后元素的样式。
animation-play-state：可选，指定动画的播放状态，可以是running（正在播放）或paused（暂停播放） */
  animation: moveInBottom 1s ease-out 0.75s;
  
  /* 用于设置动画播放前和播放后元素的样式。
  */
  animation-fill-mode: backwards;
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    transform: translateY(30px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}